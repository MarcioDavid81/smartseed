// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// empresa
model Company {
  id               String            @id @default(uuid())
  name             String
  farms            Farm[]
  users            User[]
  customers        Customer[]
  cultivars        Cultivar[]
  talhoes          Talhao[]
  harvests         Harvest[]
  beneficiations   Beneficiation[]
  buys             Buy[]
  consumptionsExit ConsumptionExit[]
  salesExit        SaleExit[]
  createdAt        DateTime          @default(now())
}

// fazenda
model Farm {
  id               String            @id @default(uuid())
  name             String
  talhoes          Talhao[]
  area             Float
  consumptionsExit ConsumptionExit[]
  company          Company           @relation(fields: [companyId], references: [id])
  companyId        String
  createdAt        DateTime          @default(now())
}

// usuário
model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  imageUrl  String?
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String
  createdAt DateTime @default(now())
}

// clientes
model Customer {
  id        String     @id @default(uuid())
  name      String
  email     String?    @unique
  adress    String?
  city      String?
  state     String?
  phone     String?
  cpf_cnpj  String?    @unique
  company   Company    @relation(fields: [companyId], references: [id])
  companyId String
  sales     SaleExit[]
  createdAt DateTime   @default(now())
}

// enums para produtos
enum ProductType {
  SOJA
  TRIGO
  MILHO
  AVEIA_BRANCA
  AVEIA_PRETA
  AVEIA_UCRANIANA
  AZEVEM
}

//talhões
model Talhao {
  id        String    @id @default(cuid())
  name      String
  area      Float
  company   Company   @relation(fields: [companyId], references: [id])
  companyId String
  farmId    String
  farm      Farm      @relation(fields: [farmId], references: [id])
  harvests  Harvest[]
  createdAt DateTime  @default(now())
}

// produto/cultivar (variedade específica)
model Cultivar {
  id               String            @id @default(cuid())
  name             String
  product          ProductType
  company          Company           @relation(fields: [companyId], references: [id])
  companyId        String
  harvests         Harvest[]
  buys             Buy[]
  beneficiations   Beneficiation[]
  consumptionsExit ConsumptionExit[]
  saleExit         SaleExit[]
  stock            Float @default(0)
  createdAt        DateTime          @default(now())
}

// colheita
model Harvest {
  id         String   @id @default(cuid())
  cultivarId String
  cultivar   Cultivar @relation(fields: [cultivarId], references: [id])
  date       DateTime
  quantityKg Float
  talhaoId   String
  talhao     Talhao   @relation(fields: [talhaoId], references: [id])
  companyId  String
  company    Company  @relation(fields: [companyId], references: [id])
  notes      String?
  createdAt  DateTime @default(now())
}

//compras
model Buy {
  id         String   @id @default(cuid())
  cultivarId String
  cultivar   Cultivar @relation(fields: [cultivarId], references: [id])
  date       DateTime
  supplier   String
  quantityKg Float
  notes      String?
  companyId  String
  company    Company  @relation(fields: [companyId], references: [id])
  createdAt  DateTime @default(now())
}

// beneficiamento
model Beneficiation {
  id         String   @id @default(cuid())
  cultivarId String
  cultivar   Cultivar @relation(fields: [cultivarId], references: [id])
  date       DateTime
  quantityKg Float
  notes      String?
  companyId  String
  company    Company  @relation(fields: [companyId], references: [id])
  createdAt  DateTime @default(now())
}

//saída para plantio
model ConsumptionExit {
  id         String   @id @default(cuid())
  cultivarId String
  cultivar   Cultivar @relation(fields: [cultivarId], references: [id])
  date       DateTime
  quantityKg Float
  farmId     String
  farm       Farm     @relation(fields: [farmId], references: [id])
  notes      String?
  companyId  String
  company    Company  @relation(fields: [companyId], references: [id])
  createdAt  DateTime @default(now())
}

//venda
model SaleExit {
  id            String    @id @default(cuid())
  cultivarId    String
  cultivar      Cultivar  @relation(fields: [cultivarId], references: [id])
  date          DateTime
  quantityKg    Float
  customerId    String?
  customer      Customer? @relation(fields: [customerId], references: [id])
  invoiceNumber String?
  saleValue     Float?
  notes         String?
  companyId     String
  company       Company   @relation(fields: [companyId], references: [id])
  createdAt     DateTime  @default(now())
}
